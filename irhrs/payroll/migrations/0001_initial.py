# Generated by Django 2.2.11 on 2021-02-11 10:29

import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import irhrs.core.utils.common
import irhrs.core.validators
import irhrs.payroll.utils.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organization', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvanceSalaryRepayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('amount', models.FloatField()),
                ('order', models.IntegerField()),
                ('paid', models.BooleanField(default=False)),
                ('paid_on', models.DateField(null=True)),
                ('payment_type', models.CharField(blank=True, choices=[('Salary Deduction', 'Salary Deduction'), ('Cash', 'Cash'), ('Cheque', 'Cheque')], max_length=25)),
                ('remarks', models.TextField(blank=True, max_length=600)),
                ('attachment', models.FileField(null=True, upload_to=irhrs.core.utils.common.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt', 'pdf', 'xls', 'xlsx', 'ods', 'ppt', 'pptx', 'txt', 'tif', 'tiff', 'jif', 'jfif', 'jp2', 'jpx', 'j2k', 'j2c', 'fpx', 'pcd', 'psd', 'rtf', 'gif', 'jpeg', 'jpg', 'png'])])),
            ],
            options={
                'ordering': ('order', 'created_at'),
            },
        ),
        migrations.CreateModel(
            name='AdvanceSalaryRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('amount', models.FloatField()),
                ('requested_for', models.DateField(validators=[irhrs.core.validators.validate_future_date])),
                ('above_limit', models.BooleanField(default=False)),
                ('reason_for_request', models.TextField(max_length=600)),
                ('status', models.CharField(choices=[('Requested', 'Requested'), ('Approved', 'Approved'), ('Repayment', 'Repayment'), ('Denied', 'Denied'), ('Completed', 'Completed'), ('Canceled', 'Canceled')], default='Requested', max_length=25)),
                ('payslip_generation_date', models.DateField(null=True)),
                ('disbursement_count_for_repayment', models.IntegerField(help_text='Number of salary disbursements required to repay the salary.', null=True, validators=[django.core.validators.MinValueValidator(limit_value=1)])),
                ('repayment_plan', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('paid_amount', models.FloatField(null=True)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdvanceSalaryRequestApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Denied', 'Denied')], max_length=25)),
                ('role', models.CharField(choices=[('Supervisor', 'Supervisor'), ('Employee', 'Employee')], max_length=25)),
                ('level', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=1)])),
                ('remarks', models.TextField(max_length=600)),
            ],
            options={
                'ordering': ('level',),
            },
        ),
        migrations.CreateModel(
            name='AdvanceSalaryRequestDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='Unnamed', max_length=255)),
                ('attachment', models.FileField(upload_to=irhrs.core.utils.common.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt', 'pdf', 'xls', 'xlsx', 'ods', 'ppt', 'pptx', 'txt', 'tif', 'tiff', 'jif', 'jfif', 'jp2', 'jpx', 'j2k', 'j2c', 'fpx', 'pcd', 'psd', 'rtf', 'gif', 'jpeg', 'jpg', 'png'])])),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdvanceSalaryRequestHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(max_length=20)),
                ('target', models.CharField(blank=True, max_length=20)),
                ('remarks', models.TextField(blank=True, max_length=600)),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='AdvanceSalarySetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('time_of_service_completion', models.IntegerField(default=182, help_text='Time of Service Completion', validators=[django.core.validators.MinValueValidator(0)])),
                ('request_limit', models.IntegerField(default=6, help_text='Maximum number of requests in fiscal year', validators=[django.core.validators.MinValueValidator(0)])),
                ('request_interval', models.IntegerField(default=60, help_text='Interval between requests', validators=[django.core.validators.MinValueValidator(0)])),
                ('complete_previous_request', models.BooleanField(default=True, help_text='Previous request to be completed?')),
                ('limit_upto', models.FloatField(help_text='Limit up to which user can request for advance salary', null=True)),
                ('disbursement_limit_for_repayment', models.IntegerField(default=6, help_text='Maximum duration of repayment', validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AdvanceSalarySurplusRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('amount', models.FloatField()),
                ('limit_amount', models.FloatField()),
                ('reason_for_request', models.TextField(max_length=600)),
                ('status', models.CharField(choices=[('Requested', 'Requested'), ('Approved', 'Approved'), ('Denied', 'Denied')], default='Requested', max_length=25)),
                ('acted_on', models.DateTimeField(null=True)),
                ('action_remarks', models.TextField(max_length=600)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AmountSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('multiple', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('approve_by', models.CharField(choices=[('Supervisor', 'Supervisor'), ('Employee', 'Employee')], default='Supervisor', max_length=10)),
                ('supervisor_level', models.CharField(blank=True, choices=[('First', '1st Level'), ('Second', '2nd Level'), ('Third', '3rd Level')], max_length=6, null=True)),
                ('approval_level', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='EmployeePayroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acknowledgement_status', models.CharField(choices=[('Pending', 'Pending'), ('Acknowledged', 'Acknowledged')], default='Pending', max_length=30)),
                ('acknowledged_at', models.DateTimeField(null=True)),
                ('annual_gross_salary', models.FloatField(default=0)),
                ('rebate_amount', models.FloatField(default=0)),
                ('annual_gross_salary_after_rebate', models.FloatField(default=0)),
                ('annual_tax', models.FloatField(default=0)),
                ('paid_tax', models.FloatField(default=0)),
                ('tax_to_be_paid', models.FloatField(default=0)),
                ('tax_rule', models.TextField(blank=True)),
                ('tax_condition', models.TextField(blank=True)),
                ('tds_type', models.TextField(blank=True)),
                ('user_note', models.TextField(max_length=600, null=True)),
            ],
            bases=(irhrs.payroll.utils.mixins.VueRouteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EmployeePayrollComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('remarks', models.TextField(max_length=600)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeePayrollHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('remarks', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExternalTaxDiscount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=1000)),
                ('attachment', models.FileField(upload_to=irhrs.core.utils.common.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt', 'pdf', 'xls', 'xlsx', 'ods', 'ppt', 'pptx', 'txt', 'tif', 'tiff', 'jif', 'jfif', 'jp2', 'jpx', 'j2k', 'j2c', 'fpx', 'pcd', 'psd', 'rtf', 'gif', 'jpeg', 'jpg', 'png'])])),
                ('amount', models.FloatField(validators=[django.core.validators.MinValueValidator(limit_value=0)])),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Heading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=150)),
                ('type', models.CharField(choices=[('Addition', 'Addition'), ('Extra Addition', 'Extra Addition'), ('Deduction', 'Deduction'), ('Extra Deduction', 'Extra Deduction'), ('Tax Deduction', 'Tax Deduction'), ('Type1Cnst', 'Type1Cnst'), ('Type2Cnst', 'Type2Cnst')], max_length=50)),
                ('payroll_setting_type', models.CharField(choices=[('Salary Structure', 'Salary Structure'), ('Allowance Settings', 'Allowance Settings'), ('Fringe Benefits', 'Fringe Benefits'), ('Provident Fund', 'Provident Fund'), ('CIT', 'CIT'), ('Social Security Fund', 'Social Security Fund'), ('Salary TDS', 'Salary TDS'), ('Loan or Advances', 'Loan or Advances'), ('Expense Settlement', 'Expense Settlement'), ('Penalty/Deduction', 'Penalty/Deduction')], max_length=50)),
                ('duration_unit', models.CharField(blank=True, choices=[('Hourly', 'Hourly'), ('Daily', 'Daily'), ('Monthly', 'Monthly'), ('Yearly', 'Yearly'), ('Unit Of Work', 'Unit Of Work')], max_length=50, null=True)),
                ('taxable', models.NullBooleanField()),
                ('benefit_type', models.CharField(blank=True, choices=[('Monetary Benefit', 'Monetary Benefit'), ('Non Monetary Benefit', 'Non Monetary Benefit'), ('No Benefit', 'No Benefit')], max_length=50, null=True)),
                ('absent_days_impact', models.NullBooleanField()),
                ('year_to_date', models.BooleanField(default=False)),
                ('hourly_heading_source', models.CharField(blank=True, choices=[('Total Hour Worked', 'Overtime'), ('Overtime', 'Total Hour Worked')], help_text='Choose Hourly Record', max_length=25, null=True)),
                ('deduct_amount_on_leave', models.NullBooleanField(default=None)),
                ('pay_when_present_holiday_offday', models.NullBooleanField(default=None)),
                ('order', models.PositiveIntegerField()),
                ('rules', django.contrib.postgres.fields.jsonb.JSONField()),
                ('is_hidden', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['order'],
            },
            bases=(irhrs.payroll.utils.mixins.VueRouteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HeadingDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=600)),
            ],
            options={
                'ordering': ('-modified_at',),
            },
        ),
        migrations.CreateModel(
            name='OperationCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=600)),
            ],
            options={
                'ordering': ('-modified_at',),
            },
        ),
        migrations.CreateModel(
            name='OperationRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('rate', models.FloatField()),
            ],
            options={
                'ordering': ('-modified_at',),
            },
        ),
        migrations.CreateModel(
            name='OrganizationPayrollConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('include_holiday_offday_in_calculation', models.BooleanField(default=False, help_text='Include holiday/offday count in calculation. It will addholiday/offday count in both working days and worked days.In other words holiday/offday will be counted as present days.')),
                ('enable_unit_of_work', models.BooleanField(default=False, help_text='Enable unit of work feature.')),
                ('payslip_template', models.CharField(choices=[('Template 1', 'Template 1'), ('Template 2', 'Template 2')], default='Template 1', max_length=15)),
                ('payslip_note', models.TextField(blank=True, max_length=600)),
            ],
        ),
        migrations.CreateModel(
            name='OverviewConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            bases=(irhrs.payroll.utils.mixins.VueRouteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_template', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(irhrs.payroll.utils.mixins.VueRouteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PackageHeading',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('order', models.PositiveIntegerField()),
                ('hourly_heading_source', models.CharField(choices=[('Total Hour Worked', 'Overtime'), ('Overtime', 'Total Hour Worked')], help_text='Choose Hourly Record', max_length=25, null=True)),
                ('absent_days_impact', models.NullBooleanField()),
                ('type', models.CharField(blank=True, choices=[('Addition', 'Addition'), ('Extra Addition', 'Extra Addition'), ('Deduction', 'Deduction'), ('Extra Deduction', 'Extra Deduction'), ('Tax Deduction', 'Tax Deduction'), ('Type1Cnst', 'Type1Cnst'), ('Type2Cnst', 'Type2Cnst')], max_length=50, null=True)),
                ('duration_unit', models.CharField(blank=True, choices=[('Hourly', 'Hourly'), ('Daily', 'Daily'), ('Monthly', 'Monthly'), ('Yearly', 'Yearly'), ('Unit Of Work', 'Unit Of Work')], max_length=50, null=True)),
                ('taxable', models.NullBooleanField()),
                ('benefit_type', models.CharField(blank=True, choices=[('Monetary Benefit', 'Monetary Benefit'), ('Non Monetary Benefit', 'Non Monetary Benefit'), ('No Benefit', 'No Benefit')], max_length=50, null=True)),
                ('rules', django.contrib.postgres.fields.jsonb.JSONField()),
                ('deduct_amount_on_leave', models.NullBooleanField(default=None)),
                ('pay_when_present_holiday_offday', models.NullBooleanField(default=None)),
            ],
            options={
                'ordering': ['order'],
            },
            bases=(irhrs.payroll.utils.mixins.VueRouteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PackageHeadingDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('simulated_from', models.DateField(null=True)),
                ('status', models.CharField(choices=[('Generated', 'Generated'), ('Approval Pending', 'Approval Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Confirmed', 'Confirmed')], default='Generated', max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('approved_date', models.DateTimeField(null=True)),
            ],
            options={
                'ordering': ['from_date'],
            },
        ),
        migrations.CreateModel(
            name='PayrollApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=15)),
                ('approval_level', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(limit_value=0)])),
            ],
        ),
        migrations.CreateModel(
            name='PayrollApprovalHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(max_length=25)),
                ('remarks', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PayrollApprovalSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('approval_level', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(limit_value=0)])),
            ],
            options={
                'ordering': ('approval_level',),
            },
        ),
        migrations.CreateModel(
            name='PayrollEditHistoryAmount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_amount', models.FloatField(null=True)),
                ('new_amount', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PayrollGenerationHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Queued', 'Queued'), ('Processing', 'Processing'), ('Failed', 'Failed'), ('Completed', 'Completed')], max_length=10)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('errors', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PayrollIncrement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('percentage_increment', models.FloatField()),
                ('effective_from', models.DateField()),
                ('remarks', models.TextField(max_length=600)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReportRowRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('amount', models.FloatField()),
                ('package_amount', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ('package_heading__order',),
            },
            bases=(irhrs.payroll.utils.mixins.VueRouteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ReportRowUserExperiencePackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ReportSalaryBreakDownRangeConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_amount', models.PositiveIntegerField()),
                ('to_amount', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SalaryHolding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateTimeField(auto_now_add=True)),
                ('to_date', models.DateTimeField(blank=True, null=True)),
                ('released', models.BooleanField(default=False)),
                ('hold_remarks', models.CharField(max_length=255)),
                ('release_remarks', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SignedPayrollHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('attachment', models.FileField(upload_to=irhrs.core.utils.common.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt', 'pdf', 'xls', 'xlsx', 'ods', 'ppt', 'pptx', 'txt', 'tif', 'tiff', 'jif', 'jfif', 'jp2', 'jpx', 'j2k', 'j2c', 'fpx', 'pcd', 'psd', 'rtf', 'gif', 'jpeg', 'jpg', 'png'])])),
                ('is_latest', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitOfWorkRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(limit_value=1)])),
                ('status', models.CharField(choices=[('Requested', 'Requested'), ('Forwarded', 'Forwarded'), ('Approved', 'Approved'), ('Denied', 'Denied'), ('Canceled', 'Canceled'), ('Confirmed', 'Confirmed')], default='Requested', max_length=25)),
                ('attachment', models.FileField(null=True, upload_to=irhrs.core.utils.common.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt', 'pdf', 'xls', 'xlsx', 'ods', 'ppt', 'pptx', 'txt', 'tif', 'tiff', 'jif', 'jfif', 'jp2', 'jpx', 'j2k', 'j2c', 'fpx', 'pcd', 'psd', 'rtf', 'gif', 'jpeg', 'jpg', 'png'])])),
                ('remarks', models.TextField(max_length=600)),
                ('confirmed_on', models.DateField(null=True)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnitOfWorkRequestHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('action_performed', models.CharField(choices=[('Requested', 'Requested'), ('Forwarded', 'Forwarded'), ('Approved', 'Approved'), ('Denied', 'Denied'), ('Canceled', 'Canceled'), ('Confirmed', 'Confirmed')], max_length=25)),
                ('remark', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='YearlyHeadingDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('fiscal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yearly_heading_details', to='organization.FiscalYear')),
                ('heading', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yearly_heading_details', to='payroll.Heading')),
            ],
            bases=(irhrs.payroll.utils.mixins.VueRouteMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserExperiencePackageSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('active_from_date', models.DateField()),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='employee_payroll_packages', to='payroll.Package')),
            ],
            options={
                'abstract': False,
            },
            bases=(irhrs.payroll.utils.mixins.VueRouteMixin, models.Model),
        ),
    ]
