# Generated by Django 2.2.11 on 2021-04-28 11:44

import cuser.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('attendance', '0008_auto_20210319_2037'),
    ]

    operations = [
        migrations.CreateModel(
            name='PenaltyRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('penalty_duration_in_days', models.FloatField(help_text='How many to reduce from payroll/leave?', validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('penalty_counter_value', models.PositiveIntegerField(help_text='Resets every? Take it as: 1 month, or every 3 days, regularly late.', validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('penalty_counter_unit', models.CharField(choices=[('days', 'Days'), ('month', 'Month')], max_length=20)),
                ('calculation_type', models.CharField(choices=[('frequency', 'Frequency'), ('duration', 'Duration')], max_length=20)),
                ('tolerated_duration_in_minutes', models.PositiveIntegerField(help_text='Threshold: Break-outs that do not exceed this value, is considered grace.', validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('tolerated_occurrences', models.PositiveIntegerField(default=0, help_text='occurrences threshold.', validators=[django.core.validators.MinValueValidator(limit_value=0)])),
                ('consider_late_in', models.BooleanField(default=True)),
                ('consider_early_out', models.BooleanField(default=True)),
                ('consider_in_between_breaks', models.BooleanField(default=False)),
                ('penalty_accumulates', models.BooleanField(default=True, help_text='If false: 100 hours results in 10 times 10 hour scheme.')),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_penaltyrule_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_penaltyrule_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeSheetUserPenalty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('loss_accumulated', models.DurationField()),
                ('lost_days_count', models.PositiveIntegerField()),
                ('penalty_accumulated', models.FloatField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('processed', 'Processed')], default='pending', max_length=12)),
                ('remarks', models.CharField(blank=True, max_length=255)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_timesheetuserpenalty_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_timesheetuserpenalty_modified', to=settings.AUTH_USER_MODEL)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='attendance.PenaltyRule')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='break_out_penalty_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeSheetUserPenaltyStatusHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('processed', 'Processed')], max_length=12)),
                ('remarks', models.CharField(max_length=255)),
                ('old_loss_accumulated', models.DurationField()),
                ('new_loss_accumulated', models.DurationField()),
                ('old_lost_days_count', models.PositiveIntegerField()),
                ('new_lost_days_count', models.PositiveIntegerField()),
                ('old_penalty_accumulated', models.FloatField()),
                ('new_penalty_accumulated', models.FloatField()),
                ('break_out_user_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='attendance.TimeSheetUserPenalty')),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_timesheetuserpenaltystatushistory_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attendance_timesheetuserpenaltystatushistory_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='breakoutuserrecordstatushistory',
            name='break_out_user_record',
        ),
        migrations.RemoveField(
            model_name='breakoutuserrecordstatushistory',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='breakoutuserrecordstatushistory',
            name='modified_by',
        ),
        migrations.RemoveField(
            model_name='breakoutpenaltysetting',
            name='consider_early_out',
        ),
        migrations.RemoveField(
            model_name='breakoutpenaltysetting',
            name='consider_in_between_breaks',
        ),
        migrations.RemoveField(
            model_name='breakoutpenaltysetting',
            name='consider_late_in',
        ),
        migrations.RemoveField(
            model_name='breakoutpenaltysetting',
            name='penalty_accumulates',
        ),
        migrations.RemoveField(
            model_name='breakoutpenaltysetting',
            name='penalty_counter_unit',
        ),
        migrations.RemoveField(
            model_name='breakoutpenaltysetting',
            name='penalty_counter_value',
        ),
        migrations.RemoveField(
            model_name='breakoutpenaltysetting',
            name='penalty_duration_in_days',
        ),
        migrations.RemoveField(
            model_name='breakoutpenaltysetting',
            name='tolerated_duration_in_minutes',
        ),
        migrations.AlterField(
            model_name='breakoutpenaltysetting',
            name='reduction_type',
            field=models.CharField(choices=[('leave', 'Leave'), ('payroll', 'Payroll')], help_text='\n        If reduction_type(leave) is selected,\n            And for example, leave_type_to_reduce(casual leave) is selected;\n            will reduce penalty_duration_in_days(0.5),\n            for every tolerated_duration_in_minutes(3 hours).\n            Resets counter every penalty_counter_value(15) penalty_counter_unit(days)\n            Can either select <28 days, any more than that, need to select month.\n        If reduction_type(payroll) is selected, or not enough casual leave;\n            Leave Balance is not touched, rather unpaid_leave_days value is sent to payroll.\n        ', max_length=20),
        ),
        migrations.DeleteModel(
            name='BreakOutUserRecord',
        ),
        migrations.DeleteModel(
            name='BreakOutUserRecordStatusHistory',
        ),
        migrations.AddField(
            model_name='penaltyrule',
            name='penalty_setting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='attendance.BreakOutPenaltySetting'),
        ),
    ]
