# Generated by Django 2.2.11 on 2021-02-15 10:36

import cuser.fields
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import irhrs.core.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('questionnaire', '0002_auto_20210211_1614'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('organization', '0002_auto_20210211_1614'),
    ]

    operations = [
        migrations.CreateModel(
            name='PerformanceAppraisalQuestionSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_performanceappraisalquestionset_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_performanceappraisalquestionset_modified', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_appraisal_question_sets', to='organization.Organization')),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=125)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_performanceappraisalyear_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_performanceappraisalyear_modified', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_appraisal_years', to='organization.Organization')),
                ('year', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performance_appraisal_years', to='organization.FiscalYear')),
            ],
            options={
                'unique_together': {('year', 'organization'), ('name', 'organization')},
            },
        ),
        migrations.CreateModel(
            name='SubPerformanceAppraisalSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=125)),
                ('weightage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('status', models.CharField(choices=[('Idle', 'Idle'), ('ACTIVE', 'ACTIVE'), ('Canceled', 'Canceled'), ('Completed', 'Completed')], default='Idle', max_length=12)),
                ('question_set_status', models.CharField(choices=[('not_generated', 'Not Generated'), ('generated', 'Generated'), ('sent', 'Sent'), ('regenerated', 'Regenerated')], default='not_generated', max_length=14)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_subperformanceappraisalslot_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_subperformanceappraisalslot_modified', to=settings.AUTH_USER_MODEL)),
                ('performance_appraisal_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slots', to='appraisal.PerformanceAppraisalYear')),
            ],
            options={
                'ordering': ('from_date',),
            },
        ),
        migrations.CreateModel(
            name='StepUpDownRecommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('score_acquired_from', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('score_acquired_to', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('change_step_by', models.IntegerField()),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_stepupdownrecommendation_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_stepupdownrecommendation_modified', to=settings.AUTH_USER_MODEL)),
                ('sub_performance_appraisal_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step_up_down_recommendation', to='appraisal.SubPerformanceAppraisalSlot')),
            ],
            options={
                'ordering': ('score_acquired_from',),
            },
        ),
        migrations.CreateModel(
            name='ScoreAndScalingSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=125)),
                ('scale', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_scoreandscalingsetting_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_scoreandscalingsetting_modified', to=settings.AUTH_USER_MODEL)),
                ('sub_performance_appraisal_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_and_scaling_setting', to='appraisal.SubPerformanceAppraisalSlot')),
            ],
            options={
                'ordering': ('score',),
            },
        ),
        migrations.CreateModel(
            name='QuestionSetUserType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('branches', models.ManyToManyField(related_name='_questionsetusertype_branches_+', to='organization.OrganizationBranch')),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_questionsetusertype_created', to=settings.AUTH_USER_MODEL)),
                ('divisions', models.ManyToManyField(related_name='_questionsetusertype_divisions_+', to='organization.OrganizationDivision')),
                ('employment_levels', models.ManyToManyField(related_name='_questionsetusertype_employment_levels_+', to='organization.EmploymentLevel')),
                ('job_titles', models.ManyToManyField(related_name='_questionsetusertype_job_titles_+', to='organization.EmploymentJobTitle')),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_questionsetusertype_modified', to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appraisal_user_type', to='questionnaire.Question')),
                ('question_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appraisal_user_type', to='appraisal.PerformanceAppraisalQuestionSet')),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='performanceappraisalquestionset',
            name='questions',
            field=models.ManyToManyField(through='appraisal.QuestionSetUserType', to='questionnaire.Question'),
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalFormDesign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('appraisal_type', models.CharField(choices=[('Self Appraisal', 'Self Appraisal'), ('Subordinate Appraisal', 'Subordinate Appraisal'), ('Peer To Peer Feedback', 'Peer To Peer Feedback'), ('Supervisor Appraisal', 'Supervisor Appraisal')], default='Self Appraisal', max_length=32)),
                ('instruction_for_evaluator', models.CharField(blank=True, max_length=10000)),
                ('include_kra', models.BooleanField(default=False)),
                ('caption_for_kra', models.CharField(blank=True, max_length=255)),
                ('include_ksa', models.BooleanField(default=False)),
                ('caption_for_ksa', models.CharField(blank=True, max_length=255)),
                ('add_feedback', models.BooleanField(default=False)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_performanceappraisalformdesign_created', to=settings.AUTH_USER_MODEL)),
                ('generic_question_set', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='form_designs', to='appraisal.PerformanceAppraisalQuestionSet')),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_performanceappraisalformdesign_modified', to=settings.AUTH_USER_MODEL)),
                ('sub_performance_appraisal_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='form_design', to='appraisal.SubPerformanceAppraisalSlot')),
            ],
            options={
                'unique_together': {('sub_performance_appraisal_slot', 'appraisal_type')},
            },
        ),
        migrations.CreateModel(
            name='PerformanceAppraisalAnswerType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('question_type', models.CharField(choices=[('ksa', 'KSA'), ('kra', 'KRA')], default='kra', max_length=3)),
                ('answer_type', models.CharField(choices=[('multiple-mcq', 'Checkbox'), ('single-mcq', 'Radio Button'), ('linear-scale', 'Linear Scale'), ('short-text', 'Short Answer'), ('long-text', 'Long Answer'), ('rating-scale', 'Rating Scale')], default='long-text', max_length=20)),
                ('description', models.CharField(blank=True, max_length=600)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_performanceappraisalanswertype_created', to=settings.AUTH_USER_MODEL)),
                ('form_design', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer_types', to='appraisal.PerformanceAppraisalFormDesign')),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_performanceappraisalanswertype_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FormReviewSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('viewable_appraisal_submitted_form_type', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('Self Appraisal', 'Self Appraisal'), ('Subordinate Appraisal', 'Subordinate Appraisal'), ('Peer To Peer Feedback', 'Peer To Peer Feedback'), ('Supervisor Appraisal', 'Supervisor Appraisal')], default='Self Appraisal', max_length=25), size=4)),
                ('can_hr_download_form', models.BooleanField(default=False)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_formreviewsetting_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_formreviewsetting_modified', to=settings.AUTH_USER_MODEL)),
                ('sub_performance_appraisal_slot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='form_review_setting', to='appraisal.SubPerformanceAppraisalSlot')),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeadlineExtendCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('total_appraise_count_ranges_from', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('total_appraise_count_ranges_to', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('extended_days', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_deadlineextendcondition_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_deadlineextendcondition_modified', to=settings.AUTH_USER_MODEL)),
                ('sub_performance_appraisal_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deadline_extend_condition', to='appraisal.SubPerformanceAppraisalSlot')),
            ],
            options={
                'ordering': ('total_appraise_count_ranges_from',),
            },
        ),
        migrations.CreateModel(
            name='DeadlineExceedScoreDeductionCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('deduction_type', models.CharField(choices=[('Percentage', 'Percentage'), ('Score', 'Score')], default='Percentage', max_length=10)),
                ('total_exceed_days_from', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('total_exceed_days_to', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('deduct_value', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_deadlineexceedscoredeductioncondition_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_deadlineexceedscoredeductioncondition_modified', to=settings.AUTH_USER_MODEL)),
                ('sub_performance_appraisal_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deduction_condition', to='appraisal.SubPerformanceAppraisalSlot')),
            ],
            options={
                'ordering': ('total_exceed_days_from',),
            },
        ),
        migrations.CreateModel(
            name='AppraisalSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('duration_of_involvement', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('duration_of_involvement_type', models.CharField(choices=[('Years', 'Years'), ('Months', 'Months')], default='Months', max_length=6)),
                ('branches', models.ManyToManyField(related_name='branch_appraisal_settings', to='organization.OrganizationBranch')),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_appraisalsetting_created', to=settings.AUTH_USER_MODEL)),
                ('divisions', models.ManyToManyField(related_name='division_appraisal_settings', to='organization.OrganizationDivision')),
                ('employment_levels', models.ManyToManyField(related_name='employment_levels_appraisal_settings', to='organization.EmploymentLevel')),
                ('employment_types', models.ManyToManyField(related_name='employment_types_appraisal_settings', to='organization.EmploymentStatus')),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_appraisalsetting_modified', to=settings.AUTH_USER_MODEL)),
                ('sub_performance_appraisal_slot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='appraisal_setting', to='appraisal.SubPerformanceAppraisalSlot')),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Appraisal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('appraisal_type', models.CharField(choices=[('Self Appraisal', 'Self Appraisal'), ('Subordinate Appraisal', 'Subordinate Appraisal'), ('Peer To Peer Feedback', 'Peer To Peer Feedback'), ('Supervisor Appraisal', 'Supervisor Appraisal')], default='Self Appraisal', max_length=25)),
                ('question_set', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('remarks', models.CharField(blank=True, max_length=225, null=True)),
                ('final_score', models.PositiveIntegerField(default=0, validators=[irhrs.core.validators.MinMaxValueValidator(0, 100)])),
                ('score_deduction_factor', models.PositiveIntegerField(default=0)),
                ('answer_committed', models.BooleanField(default=False)),
                ('committed_at', models.DateTimeField(null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('deadline', models.DateTimeField(null=True)),
                ('approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(null=True)),
                ('appraisee', models.ForeignKey(help_text='Person for whom performance appraisal is being conducted', on_delete=django.db.models.deletion.CASCADE, related_name='as_appraisees', to=settings.AUTH_USER_MODEL)),
                ('appraiser', models.ForeignKey(help_text='Person who gives review for appraisee', on_delete=django.db.models.deletion.CASCADE, related_name='as_appraisers', to=settings.AUTH_USER_MODEL)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_appraisal_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_appraisal_modified', to=settings.AUTH_USER_MODEL)),
                ('sub_performance_appraisal_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appraisals', to='appraisal.SubPerformanceAppraisalSlot')),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubPerformanceAppraisalSlotMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('appraisal_type', models.CharField(choices=[('Self Appraisal', 'Self Appraisal'), ('Subordinate Appraisal', 'Subordinate Appraisal'), ('Peer To Peer Feedback', 'Peer To Peer Feedback'), ('Supervisor Appraisal', 'Supervisor Appraisal')], default='Self Appraisal', max_length=125)),
                ('weightage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_date', models.DateTimeField(null=True)),
                ('deadline', models.DateTimeField(null=True)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_subperformanceappraisalslotmode_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_subperformanceappraisalslotmode_modified', to=settings.AUTH_USER_MODEL)),
                ('sub_performance_appraisal_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modes', to='appraisal.SubPerformanceAppraisalSlot')),
            ],
            options={
                'ordering': ('created_at',),
                'unique_together': {('sub_performance_appraisal_slot', 'appraisal_type')},
            },
        ),
        migrations.CreateModel(
            name='ExceptionalAppraiseeFilterSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('appraisal_type', models.CharField(choices=[('Self Appraisal', 'Self Appraisal'), ('Subordinate Appraisal', 'Subordinate Appraisal'), ('Peer To Peer Feedback', 'Peer To Peer Feedback'), ('Supervisor Appraisal', 'Supervisor Appraisal')], default='Self Appraisal', max_length=24)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_exceptionalappraiseefiltersetting_created', to=settings.AUTH_USER_MODEL)),
                ('exclude_users', models.ManyToManyField(related_name='_exceptionalappraiseefiltersetting_exclude_users_+', to=settings.AUTH_USER_MODEL)),
                ('include_users', models.ManyToManyField(related_name='_exceptionalappraiseefiltersetting_include_users_+', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appraisal_exceptionalappraiseefiltersetting_modified', to=settings.AUTH_USER_MODEL)),
                ('sub_performance_appraisal_slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exceptional_appraisee_filter_seetings', to='appraisal.SubPerformanceAppraisalSlot')),
            ],
            options={
                'unique_together': {('sub_performance_appraisal_slot', 'appraisal_type')},
            },
        ),
    ]
