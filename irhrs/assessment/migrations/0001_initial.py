# Generated by Django 2.2.11 on 2021-02-11 10:29

from django.db import migrations, models
import django.db.models.deletion
import irhrs.core.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('order', models.PositiveSmallIntegerField()),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='AssessmentSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, validators=[irhrs.core.validators.validate_description])),
                ('total_weightage', models.FloatField()),
                ('marginal_weightage', models.FloatField()),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='AssessmentSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, validators=[irhrs.core.validators.validate_title])),
                ('description', models.TextField(blank=True, validators=[irhrs.core.validators.validate_description])),
                ('duration', models.DurationField()),
                ('total_weightage', models.FloatField(default=0)),
                ('marginal_weightage', models.FloatField(default=0)),
                ('marginal_percentage', models.PositiveIntegerField(default=50, validators=[irhrs.core.validators.MinMaxValueValidator(1, 100)])),
                ('total_questions', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('order', models.PositiveSmallIntegerField(help_text='Internal Field. Will use this to track next questions and so on.')),
                ('is_mandatory', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in-progress', 'In Progress'), ('completed', 'Completed'), ('hold', 'Hold'), ('cancelled', 'Cancelled')], max_length=20)),
                ('score', models.FloatField(help_text="If Linear Scale, Keeps user's response.Else, score if correct answer. [for MCQs].Else, Score from reviewer", null=True, validators=[irhrs.core.validators.MinMaxValueValidator(max_value=100, min_value=0)])),
                ('response', models.TextField(blank=True, help_text='This will be used for both short & Long text answers.', validators=[irhrs.core.validators.validate_wysiwyg_field])),
                ('remarks', models.TextField(blank=True, help_text='This will be used for any additional remarks from the reviewer.', validators=[irhrs.core.validators.validate_wysiwyg_field])),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='UserAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in-progress', 'In Progress'), ('completed', 'Completed'), ('hold', 'Hold'), ('cancelled', 'Cancelled')], help_text='Status of this assessment: Pending, In Progress, Completed, etc.', max_length=20)),
                ('started_at', models.DateTimeField(help_text='When did the user started taking this assessment?', null=True)),
                ('ended_at', models.DateTimeField(help_text='When did this user completed this assessment?', null=True)),
                ('score', models.FloatField(help_text='How much did the user achieve in this assessment?', null=True)),
                ('remarks', models.TextField(blank=True, help_text='Any remarks for this test from user?', validators=[irhrs.core.validators.validate_description])),
                ('optional_remarks', models.TextField(blank=True, help_text='Any extra remarks for this test? Other from User.', validators=[irhrs.core.validators.validate_description])),
                ('expiry_date', models.DateTimeField(help_text='Expiry Date for user assessment.', null=True)),
                ('expired', models.BooleanField(default=False)),
                ('assessment_set', models.ForeignKey(help_text='The set of questions user appeared for.', on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='assessment.AssessmentSet')),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
    ]
