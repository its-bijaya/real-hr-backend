# Generated by Django 2.2.11 on 2021-02-11 10:29

from django.db import migrations, models
import irhrs.core.utils.common
import irhrs.core.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, validators=[irhrs.core.validators.validate_description])),
                ('is_correct', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, upload_to=irhrs.core.utils.common.get_upload_path)),
                ('remarks', models.TextField(blank=True, validators=[irhrs.core.validators.validate_description])),
                ('order', models.PositiveSmallIntegerField()),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Question Text.', max_length=255)),
                ('description', models.TextField(blank=True, validators=[irhrs.core.validators.validate_description])),
                ('answer_choices', models.CharField(choices=[('multiple-mcq', 'Checkbox'), ('single-mcq', 'Radio Button'), ('linear-scale', 'Linear Scale'), ('short-text', 'Short Answer'), ('long-text', 'Long Answer'), ('rating-scale', 'Rating Scale')], help_text='The types of answer choices. Eg: MCQ, Linear Scale, etc.', max_length=20)),
                ('question_type', models.CharField(choices=[('assessment', 'Assessment'), ('performance_appraisal', 'Performance Appraisal'), ('interview_evaluation', 'Interview'), ('feedback', 'Feedback'), ('vacancy', 'Vacancy Question'), ('reference_check', 'Reference Check'), ('exit_interview', 'Exit Interview'), ('pre_screening', 'Pre Screening'), ('post_screening', 'Post Screening'), ('pre_screening_interview', 'Pre Screening Interview')], help_text='Question Type. Eg: Assessment, PA, Feedback, Interview, etc.', max_length=25)),
                ('order', models.PositiveIntegerField(help_text='Default Ordering of the question in repository. It shall vary in Question Sets.')),
                ('weightage', models.PositiveIntegerField(help_text='The weightage of the question. Or, can be called `marks`')),
                ('image', models.ImageField(blank=True, upload_to=irhrs.core.utils.common.get_upload_path)),
                ('is_open_ended', models.BooleanField(default=False)),
                ('difficulty_level', models.PositiveSmallIntegerField(default=1, validators=[irhrs.core.validators.MinMaxValueValidator(max_value=10, min_value=1)])),
                ('rating_scale', models.PositiveIntegerField(null=True)),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='QuestionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('title', models.CharField(max_length=255, validators=[irhrs.core.validators.validate_title])),
                ('description', models.TextField(blank=True, validators=[irhrs.core.validators.validate_wysiwyg_field])),
                ('category', models.CharField(choices=[('assessment', 'Assessment'), ('performance_appraisal', 'Performance Appraisal'), ('interview_evaluation', 'Interview'), ('feedback', 'Feedback'), ('vacancy', 'Vacancy Question'), ('reference_check', 'Reference Check'), ('exit_interview', 'Exit Interview'), ('pre_screening', 'Pre Screening'), ('post_screening', 'Post Screening'), ('pre_screening_interview', 'Pre Screening Interview')], max_length=25)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
    ]
