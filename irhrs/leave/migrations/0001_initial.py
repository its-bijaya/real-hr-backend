# Generated by Django 2.2.11 on 2021-02-11 10:29

import django.core.validators
from django.db import migrations, models
import irhrs.core.utils.common
import irhrs.core.validators
import irhrs.leave.utils.validations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccumulationRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('duration', models.IntegerField(validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('duration_type', models.CharField(choices=[('Years', 'Years'), ('Months', 'Months'), ('Days', 'Days')], max_length=7)),
                ('balance_added', models.FloatField()),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompensatoryLeave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('balance_to_grant', models.FloatField()),
                ('hours_in_off_day', models.FloatField()),
                ('collapse_after', models.FloatField(null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('collapse_after_unit', models.CharField(choices=[('Years', 'Years'), ('Months', 'Months'), ('Days', 'Days')], max_length=7, null=True)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompensatoryLeaveAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('leave_for', models.DateField()),
                ('balance_granted', models.PositiveSmallIntegerField()),
                ('balance_consumed', models.FloatField(default=0)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CreditHourRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('minimum_request_duration_applicable', models.BooleanField()),
                ('minimum_request_duration', models.DurationField(null=True)),
                ('maximum_request_duration_applicable', models.BooleanField()),
                ('maximum_request_duration', models.DurationField(null=True)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeductionRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('duration', models.IntegerField(validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('duration_type', models.CharField(choices=[('Years', 'Years'), ('Months', 'Months'), ('Days', 'Days')], max_length=7)),
                ('balance_deducted', models.FloatField()),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HourlyLeavePerDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('leave_for', models.DateField()),
                ('is_paid', models.BooleanField()),
                ('balance', models.FloatField(help_text='Unit is days.', validators=[django.core.validators.MinValueValidator(limit_value=0)])),
            ],
        ),
        migrations.CreateModel(
            name='LeaveAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('balance', models.FloatField(default=0)),
                ('usable_balance', models.FloatField(default=0)),
                ('is_archived', models.BooleanField(default=False)),
                ('last_renewed', models.DateTimeField(blank=True, null=True)),
                ('next_renew', models.DateTimeField(blank=True, null=True)),
                ('last_accrued', models.DateTimeField(blank=True, null=True)),
                ('next_accrue', models.DateTimeField(blank=True, null=True)),
                ('last_deduction', models.DateTimeField(null=True)),
                ('next_deduction', models.DateTimeField(null=True)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveAccountHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('Assigned', 'Assigned'), ('Removed', 'Removed'), ('Renewed', 'Renewed'), ('Added', 'Added'), ('Deducted', 'Deducted'), ('Updated', 'Updated'), ('Initialized', 'Assigned with balance')], max_length=11)),
                ('previous_balance', models.FloatField()),
                ('previous_usable_balance', models.FloatField()),
                ('new_balance', models.FloatField()),
                ('new_usable_balance', models.FloatField()),
                ('remarks', models.TextField(blank=True)),
                ('accrued', models.FloatField(null=True)),
                ('renewed', models.FloatField(null=True)),
                ('encashed', models.FloatField(null=True)),
                ('carry_forward', models.FloatField(null=True)),
                ('deducted', models.FloatField(null=True)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('authority_order', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LeaveEncashment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Processed', 'Processed'), ('Encashed', 'Encashed'), ('Denied', 'Denied')], max_length=15)),
                ('balance', models.FloatField(validators=[django.core.validators.MinValueValidator(limit_value=1)])),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveEncashmentHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Processed', 'Processed'), ('Encashed', 'Encashed'), ('Denied', 'Denied')], max_length=15)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveIrregularitiesRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('weekly_limit', models.FloatField(null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('fortnightly_limit', models.FloatField(null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('monthly_limit', models.FloatField(null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('quarterly_limit', models.FloatField(null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('semi_annually_limit', models.FloatField(null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('annually_limit', models.FloatField(null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('recipient_type', models.CharField(choices=[('supervisor', 'Supervisor'), ('approver', 'Approver')], default='supervisor', max_length=10)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('status', models.CharField(choices=[('Requested', 'Requested'), ('Approved', 'Approved'), ('Denied', 'Denied'), ('Forwarded', 'Forwarded')], default='Requested', max_length=10)),
                ('details', models.TextField(max_length=600)),
                ('balance', models.FloatField(null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('part_of_day', models.CharField(blank=True, choices=[('first', 'First Half'), ('second', 'Second Half'), ('full', 'Full Day')], max_length=10)),
                ('attachment', models.FileField(blank=True, upload_to=irhrs.core.utils.common.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt', 'pdf', 'xls', 'xlsx', 'ods', 'ppt', 'pptx', 'txt', 'tif', 'tiff', 'jif', 'jfif', 'jp2', 'jpx', 'j2k', 'j2c', 'fpx', 'pcd', 'psd', 'rtf', 'gif', 'jpeg', 'jpg', 'png'])])),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveRequestDeleteHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Requested', 'Requested'), ('Approved', 'Approved'), ('Forwarded', 'Forwarded'), ('Denied', 'Denied')], default='Requested', max_length=20)),
                ('remarks', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveRequestDeleteStatusHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Requested', 'Requested'), ('Approved', 'Approved'), ('Forwarded', 'Forwarded'), ('Denied', 'Denied')], default='Requested', max_length=20)),
                ('remarks', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveRequestHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('Requested', 'Requested'), ('Approved', 'Approved'), ('Denied', 'Denied'), ('Forwarded', 'Forwarded')], max_length=10)),
                ('remarks', models.TextField(blank=True)),
                ('recipient_type', models.CharField(choices=[('supervisor', 'Supervisor'), ('approver', 'Approver')], default='supervisor', max_length=10)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('irregularity_report', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=155)),
                ('description', models.TextField(max_length=600)),
                ('is_archived', models.BooleanField(default=False)),
                ('limit_leave_to', models.FloatField(help_text='Number of leave user can take in given duration', null=True)),
                ('limit_leave_duration', models.PositiveIntegerField(null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('limit_leave_duration_type', models.CharField(choices=[('Years', 'Years'), ('Months', 'Months')], max_length=7, null=True)),
                ('min_balance', models.FloatField(help_text='Minimum balance user can have at any moment. Deduction rules will not be applied below this limit.', null=True)),
                ('max_balance', models.FloatField(help_text='Maximum balance user can have at any moment. Accumulation rules will not be applied above this limit.', null=True)),
                ('limit_leave_occurrence', models.SmallIntegerField(help_text='Limit leave request occurrence.', null=True)),
                ('limit_leave_occurrence_duration', models.PositiveIntegerField(null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('limit_leave_occurrence_duration_type', models.CharField(choices=[('Years', 'Years'), ('Months', 'Months')], max_length=7, null=True)),
                ('maximum_continuous_leave_length', models.FloatField(help_text='Maximum days user can take continuous leave. In case of time off maximum minutes', null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('minimum_continuous_leave_length', models.FloatField(help_text='Minimum days user can take continuous leave. In case of time off minimum minutes', null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('year_of_service', models.IntegerField(help_text="In months. If user crosses year of service limit, s/he doesn't have max and min continuous leave validation.", null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('holiday_inclusive', models.NullBooleanField(help_text='Include Holidays/Off days ?')),
                ('inclusive_leave', models.CharField(choices=[('Exclude Holiday And Off Day', 'Exclude Holiday And Off Day'), ('Include Holiday', 'Include Holiday'), ('Include Off Day', 'Include Off Day'), ('Include Holiday And Off Day', 'Include Holiday And Off Day')], max_length=32, null=True)),
                ('inclusive_leave_number', models.PositiveIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_paid', models.BooleanField()),
                ('proportionate_on_joined_date', models.NullBooleanField(help_text='Proportionate leave on joined date.')),
                ('can_apply_half_shift', models.NullBooleanField()),
                ('employee_can_apply', models.BooleanField()),
                ('admin_can_assign', models.BooleanField()),
                ('can_apply_beyond_zero_balance', models.NullBooleanField(help_text='Can apply beyond zero balance')),
                ('beyond_limit', models.FloatField(help_text='Beyond limit.', null=True)),
                ('required_experience', models.FloatField(null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('required_experience_duration', models.CharField(choices=[('Years', 'Years'), ('Months', 'Months'), ('Days', 'Days')], max_length=7, null=True)),
                ('require_prior_approval', models.BooleanField(validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('prior_approval', models.IntegerField(null=True)),
                ('prior_approval_unit', models.CharField(blank=True, choices=[('Days', 'Days'), ('Hours', 'Hours'), ('Minutes', 'Minutes')], max_length=20)),
                ('require_docs', models.NullBooleanField()),
                ('require_docs_for', models.FloatField(help_text='Require docs upon leave for more than this days/minutes in case of time off.', null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('depletion_required', models.NullBooleanField()),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveSheet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('leave_for', models.DateField()),
                ('balance', models.FloatField()),
                ('balance_minutes', models.FloatField(null=True)),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=600)),
                ('applicable_for_gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other'), ('All', 'All')], max_length=10)),
                ('applicable_for_marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed'), ('All', 'All')], max_length=10)),
                ('category', models.CharField(choices=[('General', 'General'), ('Years of Service', 'Years of Service'), ('Time Off', 'Time Off'), ('Compensatory', 'Compensatory'), ('Credit Hour', 'Credit Hour')], max_length=20)),
                ('email_notification', models.NullBooleanField()),
                ('sms_notification', models.NullBooleanField()),
                ('is_archived', models.BooleanField(default=False)),
                ('visible_on_default', models.BooleanField(default=True)),
                ('multi_level_approval', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MasterSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=600)),
                ('effective_from', models.DateField(null=True, validators=[irhrs.core.validators.validate_future_date])),
                ('effective_till', models.DateField(blank=True, null=True)),
                ('accumulation', models.BooleanField()),
                ('renewal', models.BooleanField()),
                ('deductible', models.BooleanField()),
                ('paid', models.BooleanField()),
                ('unpaid', models.BooleanField()),
                ('half_shift_leave', models.BooleanField()),
                ('occurrences', models.BooleanField()),
                ('beyond_balance', models.BooleanField()),
                ('proportionate_leave', models.BooleanField()),
                ('depletion_required', models.BooleanField()),
                ('require_experience', models.BooleanField()),
                ('require_time_period', models.BooleanField()),
                ('require_prior_approval', models.BooleanField()),
                ('require_document', models.BooleanField()),
                ('leave_limitations', models.BooleanField()),
                ('leave_irregularities', models.BooleanField()),
                ('employees_can_apply', models.BooleanField()),
                ('admin_can_assign', models.BooleanField()),
                ('continuous', models.BooleanField()),
                ('holiday_inclusive', models.BooleanField()),
                ('encashment', models.BooleanField()),
                ('carry_forward', models.BooleanField()),
                ('collapsible', models.BooleanField()),
                ('years_of_service', models.BooleanField()),
                ('time_off', models.BooleanField()),
                ('compensatory', models.BooleanField()),
                ('credit_hour', models.NullBooleanField(help_text='Flag to enable Credit Hour System.')),
            ],
        ),
        migrations.CreateModel(
            name='RenewalRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('duration', models.IntegerField()),
                ('duration_type', models.CharField(choices=[('Years', 'Years'), ('Months', 'Months'), ('Days', 'Days')], max_length=7)),
                ('initial_balance', models.FloatField()),
                ('max_balance_encashed', models.FloatField(null=True)),
                ('max_balance_forwarded', models.FloatField(null=True)),
                ('is_collapsible', models.NullBooleanField()),
                ('back_to_default_value', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeOffRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('total_late_minutes', models.IntegerField()),
                ('reduce_leave_by', models.FloatField(validators=[irhrs.core.validators.validate_multiple_of_half])),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YearsOfServiceRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('years_of_service', models.IntegerField(validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('balance_added', models.FloatField()),
                ('collapse_after', models.FloatField(null=True, validators=[irhrs.leave.utils.validations.validate_rule_limits])),
                ('collapse_after_unit', models.CharField(choices=[('Years', 'Years'), ('Months', 'Months'), ('Days', 'Days')], max_length=7, null=True)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
    ]
