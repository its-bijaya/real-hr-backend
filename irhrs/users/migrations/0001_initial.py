# Generated by Django 2.2.11 on 2021-02-11 10:29

import cuser.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import irhrs.core.utils.common
import irhrs.core.validators
import sorl.thumbnail.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hris', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0011_update_proxy_permissions'),
        ('organization', '0001_initial'),
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='user email')),
                ('username', models.CharField(max_length=255, null=True, unique=True, verbose_name='user username')),
                ('first_name', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_names_only], verbose_name='First Name')),
                ('middle_name', models.CharField(blank=True, max_length=150, validators=[irhrs.core.validators.validate_names_only], verbose_name='Middle Name')),
                ('last_name', models.CharField(blank=True, max_length=150, validators=[irhrs.core.validators.validate_names_only], verbose_name='Last Name')),
                ('profile_picture', sorl.thumbnail.fields.ImageField(blank=True, upload_to=irhrs.core.utils.common.get_upload_path, validators=[irhrs.core.validators.validate_image_file_extension])),
                ('_cover_picture', sorl.thumbnail.fields.ImageField(blank=True, db_column='cover_picture', upload_to=irhrs.core.utils.common.get_upload_path, validators=[irhrs.core.validators.validate_image_file_extension])),
                ('signature', sorl.thumbnail.fields.ImageField(blank=True, upload_to=irhrs.core.utils.common.get_upload_path, validators=[irhrs.core.validators.validate_image_file_extension])),
                ('is_active', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('last_online', models.DateTimeField(blank=True, null=True)),
                ('is_audit_user', models.BooleanField(default=False)),
                ('token_refresh_date', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChangeRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('remarks', models.CharField(blank=True, max_length=200)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('object_id', models.PositiveIntegerField(null=True)),
                ('is_deleted', models.NullBooleanField()),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType')),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_changerequest_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_changerequest_modified', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_changerequests', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExternalUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('full_name', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_text_only], verbose_name='Full Name')),
                ('profile_picture', sorl.thumbnail.fields.ImageField(blank=True, upload_to=irhrs.core.utils.common.get_upload_path)),
                ('phone_number', models.CharField(max_length=30, verbose_name='Phone Number')),
                ('email', models.EmailField(max_length=50)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=6, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], db_index=True, max_length=50, null=True)),
                ('dob', models.DateField(blank=True, null=True, validators=[irhrs.core.validators.validate_user_birth_date], verbose_name='Date of Birth')),
                ('user_type', models.CharField(choices=[('applicant', 'Applicant'), ('interviewer', 'Interviewer'), ('reference_checker', 'Reference Checker'), ('no_objection_verifier', 'No Objection Verifier')], default='applicant', max_length=30)),
                ('is_archived', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserContactDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('number', models.CharField(db_index=True, max_length=25)),
                ('number_type', models.CharField(choices=[('Fax', 'Fax'), ('Phone', 'Phone'), ('Mobile', 'Mobile'), ('Work', 'Work')], db_index=True, default='Mobile', max_length=10)),
                ('contact_of', models.CharField(choices=[('Self', 'Self'), ('Spouse', 'Spouse'), ('Sibling', 'Sibling'), ('Parent', 'Parent'), ('Family', 'Family'), ('Relative', 'Relative'), ('Friend', 'Friend'), ('Office', 'Office'), ('Children', 'Children')], default='Self', max_length=10)),
                ('name', models.CharField(blank=True, max_length=255, validators=[irhrs.core.validators.validate_title])),
                ('address', models.CharField(blank=True, max_length=255, validators=[irhrs.core.validators.validate_address])),
                ('emergency', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_dependent', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[irhrs.core.validators.validate_past_date])),
                ('attachment', models.FileField(blank=True, null=True, upload_to=irhrs.core.utils.common.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt', 'pdf', 'xls', 'xlsx', 'ods', 'ppt', 'pptx', 'txt', 'tif', 'tiff', 'jif', 'jfif', 'jp2', 'jpx', 'j2k', 'j2c', 'fpx', 'pcd', 'psd', 'rtf', 'gif', 'jpeg', 'jpg', 'png'])])),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usercontactdetail_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usercontactdetail_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
                'unique_together': {('user', 'number')},
            },
        ),
        migrations.CreateModel(
            name='UserExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_current', models.BooleanField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('job_description', models.TextField(blank=True, max_length=100000)),
                ('job_specification', models.TextField(blank=True, max_length=100000)),
                ('objective', models.TextField(blank=True, max_length=100000)),
                ('in_probation', models.BooleanField(default=False)),
                ('probation_end_date', models.DateField(null=True)),
                ('current_step', models.PositiveSmallIntegerField(validators=[irhrs.core.validators.MinMaxValueValidator(max_value=100, min_value=0)])),
                ('upcoming', models.BooleanField(default=False, help_text='Field to decide if the experience is upcoming. Will be hidden from normal user.')),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_experiences', to='organization.OrganizationBranch')),
                ('change_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_experiences', to='hris.ChangeType')),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userexperience_created', to=settings.AUTH_USER_MODEL)),
                ('division', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_experiences', to='organization.OrganizationDivision')),
                ('employee_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_experiences', to='organization.EmploymentLevel')),
                ('employment_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_experiences', to='organization.EmploymentStatus')),
                ('job_title', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_experiences', to='organization.EmploymentJobTitle')),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userexperience_modified', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_experiences', to='organization.Organization')),
                ('replacing', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replaced_by_user_experience', to=settings.AUTH_USER_MODEL)),
                ('skill', models.ManyToManyField(to='common.Skill')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_experiences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-start_date',),
            },
        ),
        migrations.CreateModel(
            name='UserSupervisor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('authority_order', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('approve', models.BooleanField(default=False)),
                ('deny', models.BooleanField(default=False)),
                ('forward', models.BooleanField(default=False)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usersupervisor_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usersupervisor_modified', to=settings.AUTH_USER_MODEL)),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_supervisor', to=settings.AUTH_USER_MODEL)),
                ('supervisor_organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supervisor_organization', to='organization.Organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supervisors', to=settings.AUTH_USER_MODEL)),
                ('user_organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_ordinate_organization', to='organization.Organization')),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('country_code', models.CharField(choices=[('+977', '+977')], default='+977', max_length=5)),
                ('phone', models.CharField(max_length=12, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userphone_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userphone_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='uphone', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserMedicalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('blood_group', models.CharField(choices=[('a+', 'A +ve'), ('a-', 'A -ve'), ('b+', 'B +ve'), ('b-', 'B -ve'), ('ab+', 'AB +ve'), ('ab-', 'AB -ve'), ('o+', 'O +ve'), ('o-', 'O -ve')], max_length=10)),
                ('height', models.CharField(max_length=10)),
                ('weight', models.FloatField()),
                ('height_unit', models.CharField(choices=[('ft.in', 'Foot and Inches'), ('cms', 'Centimeters')], max_length=10)),
                ('weight_unit', models.CharField(choices=[('lbs', 'Pounds'), ('kgs', 'Kilograms')], max_length=10)),
                ('smoker', models.BooleanField(default=False)),
                ('drinker', models.BooleanField(default=False)),
                ('on_medication', models.BooleanField(default=False)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usermedicalinfo_created', to=settings.AUTH_USER_MODEL)),
                ('disabilities', models.ManyToManyField(blank=True, to='common.Disability')),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usermedicalinfo_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='medical_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserKSAO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_key', models.BooleanField(default=False)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userksao_created', to=settings.AUTH_USER_MODEL)),
                ('ksa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_ksao', to='organization.KnowledgeSkillAbility')),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userksao_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_ksao', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserInsurance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('policy_name', models.CharField(max_length=225)),
                ('policy_provider', models.CharField(max_length=225)),
                ('policy_type', models.CharField(choices=[('health_insurance', 'Health Insurance'), ('life_insurance', 'Life Insurance')], default='health_insurance', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to=irhrs.core.utils.common.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt', 'pdf', 'xls', 'xlsx', 'ods', 'ppt', 'pptx', 'txt', 'tif', 'tiff', 'jif', 'jfif', 'jp2', 'jpx', 'j2k', 'j2c', 'fpx', 'pcd', 'psd', 'rtf', 'gif', 'jpeg', 'jpg', 'png'])])),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userinsurance_created', to=settings.AUTH_USER_MODEL)),
                ('dependent', models.ManyToManyField(related_name='insurances', to='users.UserContactDetail')),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userinsurance_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserExperienceStepHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('step', models.PositiveSmallIntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userexperiencestephistory_created', to=settings.AUTH_USER_MODEL)),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step_histories', to='users.UserExperience')),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userexperiencestephistory_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserEducation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('degree', models.CharField(choices=[('PHD', 'PHD'), ('Master', 'Master'), ('Bachelor', 'Bachelor'), ('Diploma', 'Diploma'), ('Intermediate', 'Intermediate'), ('SLC', 'SLC'), ('Below SLC', 'Below SLC')], max_length=20)),
                ('field', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('institution', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('university', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('marks_type', models.CharField(blank=True, choices=[('cgpa', 'CGPA'), ('percentage', 'Percentage')], max_length=10)),
                ('marks', models.FloatField(null=True)),
                ('from_year', models.DateField(validators=[irhrs.core.validators.validate_past_date])),
                ('to_year', models.DateField(null=True, validators=[irhrs.core.validators.validate_past_date])),
                ('is_current', models.BooleanField(default=False)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usereducation_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usereducation_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='user_education', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('title', models.CharField(max_length=255, validators=[irhrs.core.validators.validate_title])),
                ('file', models.FileField(upload_to=irhrs.core.utils.common.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt', 'pdf', 'xls', 'xlsx', 'ods', 'ppt', 'pptx', 'txt', 'tif', 'tiff', 'jif', 'jfif', 'jp2', 'jpx', 'j2k', 'j2c', 'fpx', 'pcd', 'psd', 'rtf', 'gif', 'jpeg', 'jpg', 'png'])])),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userdocument_created', to=settings.AUTH_USER_MODEL)),
                ('document_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_documents', to='common.DocumentCategory', validators=[irhrs.core.validators.DocumentTypeValidator(association_type='Employee')])),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userdocument_modified', to=settings.AUTH_USER_MODEL)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=15, null=True, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=6)),
                ('date_of_birth', models.DateField(validators=[irhrs.core.validators.validate_user_birth_date])),
                ('nationality', models.CharField(choices=[('Afghan', 'Afghan'), ('Albanian', 'Albanian'), ('Algerian', 'Algerian'), ('American', 'American'), ('Andorran', 'Andorran'), ('Angolan', 'Angolan'), ('Antiguans', 'Antiguans'), ('Argentinean', 'Argentinean'), ('Armenian', 'Armenian'), ('Australian', 'Australian'), ('Austrian', 'Austrian'), ('Azerbaijani', 'Azerbaijani'), ('Bahamian', 'Bahamian'), ('Bahraini', 'Bahraini'), ('Bangladeshi', 'Bangladeshi'), ('Barbadian', 'Barbadian'), ('Barbudans', 'Barbudans'), ('Batswana', 'Batswana'), ('Belarusian', 'Belarusian'), ('Belgian', 'Belgian'), ('Belizean', 'Belizean'), ('Beninese', 'Beninese'), ('Bhutanese', 'Bhutanese'), ('Bolivian', 'Bolivian'), ('Bosnian', 'Bosnian'), ('Brazilian', 'Brazilian'), ('British', 'British'), ('Bruneian', 'Bruneian'), ('Bulgarian', 'Bulgarian'), ('Burkinabe', 'Burkinabe'), ('Burmese', 'Burmese'), ('Burundian', 'Burundian'), ('Cambodian', 'Cambodian'), ('Cameroonian', 'Cameroonian'), ('Canadian', 'Canadian'), ('Cape Verdean', 'Cape Verdean'), ('Central African', 'Central African'), ('Chadian', 'Chadian'), ('Chilean', 'Chilean'), ('Chinese', 'Chinese'), ('Colombian', 'Colombian'), ('Comoran', 'Comoran'), ('Congolese', 'Congolese'), ('Costa Rican', 'Costa Rican'), ('Croatian', 'Croatian'), ('Cuban', 'Cuban'), ('Cypriot', 'Cypriot'), ('Czech', 'Czech'), ('Danish', 'Danish'), ('Djibouti', 'Djibouti'), ('Dominican', 'Dominican'), ('Dutch', 'Dutch'), ('East Timorese', 'East Timorese'), ('Ecuadorean', 'Ecuadorean'), ('Egyptian', 'Egyptian'), ('Emirian', 'Emirian'), ('Equatorial Guinean', 'Equatorial Guinean'), ('Eritrean', 'Eritrean'), ('Estonian', 'Estonian'), ('Ethiopian', 'Ethiopian'), ('Fijian', 'Fijian'), ('Filipino', 'Filipino'), ('Finnish', 'Finnish'), ('French', 'French'), ('Gabonese', 'Gabonese'), ('Gambian', 'Gambian'), ('Georgian', 'Georgian'), ('German', 'German'), ('Ghanaian', 'Ghanaian'), ('Greek', 'Greek'), ('Grenadian', 'Grenadian'), ('Guatemalan', 'Guatemalan'), ('Guinea-Bissauan', 'Guinea-Bissauan'), ('Guinean', 'Guinean'), ('Guyanese', 'Guyanese'), ('Haitian', 'Haitian'), ('Herzegovinian', 'Herzegovinian'), ('Honduran', 'Honduran'), ('Hungarian', 'Hungarian'), ('Icelander', 'Icelander'), ('Indian', 'Indian'), ('Indonesian', 'Indonesian'), ('Iranian', 'Iranian'), ('Iraqi', 'Iraqi'), ('Irish', 'Irish'), ('Israeli', 'Israeli'), ('Italian', 'Italian'), ('Ivorian', 'Ivorian'), ('Jamaican', 'Jamaican'), ('Japanese', 'Japanese'), ('Jordanian', 'Jordanian'), ('Kazakhstani', 'Kazakhstani'), ('Kenyan', 'Kenyan'), ('Kittian and Nevisian', 'Kittian and Nevisian'), ('Kuwaiti', 'Kuwaiti'), ('Kyrgyz', 'Kyrgyz'), ('Laotian', 'Laotian'), ('Latvian', 'Latvian'), ('Lebanese', 'Lebanese'), ('Liberian', 'Liberian'), ('Libyan', 'Libyan'), ('Liechtensteiner', 'Liechtensteiner'), ('Lithuanian', 'Lithuanian'), ('Luxembourger', 'Luxembourger'), ('Macedonian', 'Macedonian'), ('Malagasy', 'Malagasy'), ('Malawian', 'Malawian'), ('Malaysian', 'Malaysian'), ('Maldivan', 'Maldivan'), ('Malian', 'Malian'), ('Maltese', 'Maltese'), ('Marshallese', 'Marshallese'), ('Mauritanian', 'Mauritanian'), ('Mauritian', 'Mauritian'), ('Mexican', 'Mexican'), ('Micronesian', 'Micronesian'), ('Moldovan', 'Moldovan'), ('Monacan', 'Monacan'), ('Mongolian', 'Mongolian'), ('Moroccan', 'Moroccan'), ('Mosotho', 'Mosotho'), ('Motswana', 'Motswana'), ('Mozambican', 'Mozambican'), ('Namibian', 'Namibian'), ('Nauruan', 'Nauruan'), ('Nepali', 'Nepali'), ('New Zealander', 'New Zealander'), ('Ni-Vanuatu', 'Ni-Vanuatu'), ('Nicaraguan', 'Nicaraguan'), ('Nigerien', 'Nigerien'), ('North Korean', 'North Korean'), ('Northern Irish', 'Northern Irish'), ('Norwegian', 'Norwegian'), ('Omani', 'Omani'), ('Pakistani', 'Pakistani'), ('Palauan', 'Palauan'), ('Panamanian', 'Panamanian'), ('Papua New Guinean', 'Papua New Guinean'), ('Paraguayan', 'Paraguayan'), ('Peruvian', 'Peruvian'), ('Polish', 'Polish'), ('Portuguese', 'Portuguese'), ('Qatari', 'Qatari'), ('Romanian', 'Romanian'), ('Russian', 'Russian'), ('Rwandan', 'Rwandan'), ('Saint Lucian', 'Saint Lucian'), ('Salvadoran', 'Salvadoran'), ('Samoan', 'Samoan'), ('San Marinese', 'San Marinese'), ('Sao Tomean', 'Sao Tomean'), ('Saudi', 'Saudi'), ('Scottish', 'Scottish'), ('Senegalese', 'Senegalese'), ('Serbian', 'Serbian'), ('Seychellois', 'Seychellois'), ('Sierra Leonean', 'Sierra Leonean'), ('Singaporean', 'Singaporean'), ('Slovakian', 'Slovakian'), ('Slovenian', 'Slovenian'), ('Solomon Islander', 'Solomon Islander'), ('Somali', 'Somali'), ('South African', 'South African'), ('South Korean', 'South Korean'), ('Spanish', 'Spanish'), ('Sri Lankan', 'Sri Lankan'), ('Sudanese', 'Sudanese'), ('Surinamer', 'Surinamer'), ('Swazi', 'Swazi'), ('Swedish', 'Swedish'), ('Swiss', 'Swiss'), ('Syrian', 'Syrian'), ('Taiwanese', 'Taiwanese'), ('Tajik', 'Tajik'), ('Tanzanian', 'Tanzanian'), ('Thai', 'Thai'), ('Togolese', 'Togolese'), ('Tongan', 'Tongan'), ('Trinidadian or Tobagonian', 'Trinidadian or Tobagonian'), ('Tunisian', 'Tunisian'), ('Turkish', 'Turkish'), ('Tuvaluan', 'Tuvaluan'), ('Ugandan', 'Ugandan'), ('Ukrainian', 'Ukrainian'), ('Uruguayan', 'Uruguayan'), ('Uzbekistani', 'Uzbekistani'), ('Venezuelan', 'Venezuelan'), ('Vietnamese', 'Vietnamese'), ('Welsh', 'Welsh'), ('Yemenite', 'Yemenite'), ('Zambian', 'Zambian'), ('Zimbabwean', 'Zimbabwean')], default='Nepali', max_length=50)),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], default='Single', max_length=20)),
                ('marriage_anniversary', models.DateField(blank=True, null=True, validators=[irhrs.core.validators.validate_past_date])),
                ('extension_number', models.PositiveIntegerField(blank=True, null=True, validators=[irhrs.core.validators.validate_extension_number])),
                ('joined_date', models.DateField(default=irhrs.core.utils.common.get_today)),
                ('resigned_date', models.DateField(blank=True, null=True)),
                ('last_working_date', models.DateField(blank=True, null=True)),
                ('parting_reason', models.CharField(blank=True, choices=[('Resigned', 'Resigned'), ('Terminated', 'Terminated'), ('Contract Completed', 'Contract Completed')], max_length=20)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userdetails', to='organization.OrganizationBranch')),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userdetail_created', to=settings.AUTH_USER_MODEL)),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userdetails', to='organization.OrganizationDivision')),
                ('employment_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userdetails', to='organization.EmploymentLevel')),
                ('employment_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userdetails', to='organization.EmploymentStatus')),
                ('ethnicity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ethnicity_userdetails', to='common.ReligionAndEthnicity', validators=[irhrs.core.validators.validate_ethnicity])),
                ('job_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userdetails', to='organization.EmploymentJobTitle')),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userdetail_modified', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userdetails', to='organization.Organization')),
                ('religion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='religion_userdetails', to='common.ReligionAndEthnicity', validators=[irhrs.core.validators.validate_religion])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detail', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RestrictedMedicine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('title', models.CharField(max_length=225)),
                ('description', models.TextField(blank=True, max_length=600)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_restrictedmedicine_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_restrictedmedicine_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChronicDisease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('title', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('description', models.TextField(blank=True)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_chronicdisease_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_chronicdisease_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChangeRequestDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_field', models.CharField(max_length=100)),
                ('change_field_label', models.CharField(max_length=100)),
                ('old_value', models.TextField(null=True)),
                ('old_value_display', models.TextField(null=True)),
                ('new_value', models.TextField(null=True)),
                ('new_value_display', models.TextField(null=True)),
                ('files', models.FileField(upload_to=irhrs.core.utils.common.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['doc', 'docx', 'odt', 'pdf', 'xls', 'xlsx', 'ods', 'ppt', 'pptx', 'txt', 'tif', 'tiff', 'jif', 'jfif', 'jp2', 'jpx', 'j2k', 'j2c', 'fpx', 'pcd', 'psd', 'rtf', 'gif', 'jpeg', 'jpg', 'png'])])),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='users.ChangeRequest')),
            ],
        ),
        migrations.CreateModel(
            name='AllergicHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('title', models.CharField(max_length=225)),
                ('description', models.TextField(blank=True, max_length=600)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_allergichistory_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_allergichistory_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at', '-modified_at'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserVolunteerExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('organization', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('cause', models.CharField(blank=True, max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('title', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('role', models.CharField(max_length=150)),
                ('description', models.TextField(max_length=600)),
                ('currently_volunteering', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_uservolunteerexperience_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_uservolunteerexperience_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_experiences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['title'],
                'unique_together': {('user', 'title')},
            },
        ),
        migrations.CreateModel(
            name='UserTraining',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=100, validators=[irhrs.core.validators.validate_title])),
                ('institution', models.CharField(max_length=100, validators=[irhrs.core.validators.validate_title])),
                ('is_current', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usertraining_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usertraining_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='trainings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('name', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserSocialActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('title', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('description', models.TextField(blank=True)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usersocialactivity_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_usersocialactivity_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='social_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('title',),
                'unique_together': {('title', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserPublishedContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('title', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('publication', models.CharField(blank=True, help_text='Publication', max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('content_type', models.CharField(choices=[('Research Paper', 'Research Paper'), ('Article', 'Article'), ('Newspaper Article', 'Newspaper Article'), ('Magazine Article', 'Magazine Article'), ('Blog', 'Blog'), ('Video & Audio', 'Video & Audio'), ('Literature', 'Literature'), ('Books', 'Books')], max_length=30)),
                ('published_date', models.DateField(null=True, validators=[irhrs.core.validators.validate_past_date])),
                ('publication_url', models.URLField(blank=True)),
                ('summary', models.TextField(max_length=600)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userpublishedcontent_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userpublishedcontent_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='published_contents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['title'],
                'unique_together': {('title', 'user', 'published_date')},
            },
        ),
        migrations.CreateModel(
            name='UserPastExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('title', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('organization', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('responsibility', models.TextField(max_length=5000)),
                ('department', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('employment_level', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('employment_status', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('job_location', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_title])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userpastexperience_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userpastexperience_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='past_experiences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('start_date',),
                'unique_together': {('title', 'organization', 'start_date')},
            },
        ),
        migrations.CreateModel(
            name='UserLegalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('pan_number', models.CharField(max_length=50, validators=[irhrs.core.validators.validate_invalid_chars, irhrs.core.validators.validate_has_digit])),
                ('cit_number', models.CharField(blank=True, max_length=50, validators=[irhrs.core.validators.validate_invalid_chars, irhrs.core.validators.validate_has_digit])),
                ('pf_number', models.CharField(blank=True, max_length=50, validators=[irhrs.core.validators.validate_invalid_chars, irhrs.core.validators.validate_has_digit])),
                ('citizenship_number', models.CharField(max_length=50, validators=[irhrs.core.validators.validate_invalid_chars, irhrs.core.validators.validate_has_digit])),
                ('ssfid', models.CharField(blank=True, help_text='Social Security Fund ID', max_length=50, validators=[irhrs.core.validators.validate_invalid_chars, irhrs.core.validators.validate_has_digit])),
                ('passport_number', models.CharField(blank=True, max_length=50, validators=[irhrs.core.validators.validate_invalid_chars, irhrs.core.validators.validate_has_digit])),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userlegalinfo_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userlegalinfo_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='legal_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'citizenship_number')},
            },
        ),
        migrations.CreateModel(
            name='UserLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('name', models.CharField(max_length=100, validators=[irhrs.core.validators.validate_title])),
                ('native', models.BooleanField(default=False)),
                ('speaking', models.PositiveSmallIntegerField(choices=[(1, 'Poor'), (2, 'Average'), (3, 'Good'), (4, 'Very Good'), (5, 'Excellent')])),
                ('reading', models.PositiveSmallIntegerField(choices=[(1, 'Poor'), (2, 'Average'), (3, 'Good'), (4, 'Very Good'), (5, 'Excellent')])),
                ('writing', models.PositiveSmallIntegerField(choices=[(1, 'Poor'), (2, 'Average'), (3, 'Good'), (4, 'Very Good'), (5, 'Excellent')])),
                ('listening', models.PositiveSmallIntegerField(choices=[(1, 'Poor'), (2, 'Average'), (3, 'Good'), (4, 'Very Good'), (5, 'Excellent')])),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userlanguage_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userlanguage_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='languages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('name',),
                'unique_together': {('name', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserBank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('account_number', models.CharField(max_length=150, validators=[irhrs.core.validators.validate_has_digit, irhrs.core.validators.validate_invalid_chars])),
                ('branch', models.CharField(blank=True, max_length=150, null=True, validators=[irhrs.core.validators.validate_title])),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_banks', to='common.Bank')),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userbank_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_userbank_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('bank', 'account_number')},
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('street', models.CharField(blank=True, db_index=True, max_length=255)),
                ('city', models.CharField(blank=True, db_index=True, max_length=100)),
                ('country', models.CharField(blank=True, db_index=True, max_length=100)),
                ('address', models.CharField(db_index=True, max_length=255)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('address_type', models.CharField(choices=[('Permanent', 'Permanent'), ('Temporary', 'Temporary')], default='Permanent', max_length=10)),
                ('created_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_useraddress_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', cuser.fields.CurrentUserField(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users_useraddress_modified', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('address',),
                'unique_together': {('user', 'address_type')},
            },
        ),
    ]
